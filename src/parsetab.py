
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL CLOSEQUESTIONMARK COLON COMA CONST DECREMENT_OPERATOR DECREMENT_SELF_ASSIGN_OPERATOR DIVIDE DO DOTCOMA DOUBLE DOUBLETYPE ELSE EQUAL EQUALS FALSE FINAL FOR GREATER_THAN GREATER_THAN_EQUAL HASHSETTYPE ID IF INCREMENT_OPERATOR INCREMENT_SELF_ASSIGN_OPERATOR INT INTTYPE LATE LCURLY_BRACKET LESS_THAN LESS_THAN_EQUAL LINKEDHASHSETTYPE LIST LPAREN LSBRACKET METHOD MINUS NEG NOT_EQUAL NUM OBJTYPE OR PLUS PRINT RCURLY_BRACKET RECORD_ARG REQUIRED RETURN RPAREN RSBRACKET SETTYPE SPLAYTREESETTYPE STATIC STR STRINGTYPE TIMES TRUE VAR VOID WHILEcodeLine : FOR LPAREN typesVarAsignation conditionProduction DOTCOMA operation RPAREN LCURLY_BRACKET codeLine RCURLY_BRACKEToperation : ID DECREMENT_OPERATOR\n    | DECREMENT_OPERATOR ID\n    | INCREMENT_OPERATOR ID\n    | ID INCREMENT_OPERATOR\n    | ID operator ID\n    | ID operator numericValue\n    | numericValue operator ID\n    operator : PLUS\n    | MINUS\n    | TIMES\n    | DIVIDE\n    codeLine : VAR ID EQUALS LESS_THAN OBJTYPE GREATER_THAN LCURLY_BRACKET RCURLY_BRACKET DOTCOMA\n    | setTypes LESS_THAN OBJTYPE GREATER_THAN ID EQUALS LCURLY_BRACKET RCURLY_BRACKET DOTCOMA\n    codeLine : VAR ID EQUALS LESS_THAN OBJTYPE GREATER_THAN LCURLY_BRACKET values RCURLY_BRACKET DOTCOMA\n    | setTypes LESS_THAN OBJTYPE GREATER_THAN ID EQUALS LCURLY_BRACKET values RCURLY_BRACKET DOTCOMA\n    setTypes : SETTYPE\n    | HASHSETTYPE\n    | LINKEDHASHSETTYPE\n    | SPLAYTREESETTYPE\n    codeLine : LIST OBJTYPE ID EQUALS LSBRACKET RSBRACKET DOTCOMA\n    | LIST OBJTYPE ID EQUALS LIST OBJTYPE LPAREN RPAREN DOTCOMA\n    | LIST OBJTYPE ID EQUALS LIST LPAREN RPAREN DOTCOMA\n    codeLine : LIST OBJTYPE ID EQUALS LSBRACKET values RSBRACKET DOTCOMAcodeLine : IF LPAREN conditionProduction RPAREN LCURLY_BRACKET RCURLY_BRACKET\n    | IF LPAREN conditionProduction RPAREN LCURLY_BRACKET\n    | RCURLY_BRACKET\n    codeLine : ELSE LCURLY_BRACKET RCURLY_BRACKET\n    | IF LCURLY_BRACKET\n    codeLine : ELSE IF LPAREN conditionProduction RPAREN LCURLY_BRACKET RCURLY_BRACKET\n    | ELSE IF LPAREN conditionProduction RPAREN LCURLY_BRACKET\n    codeLine : types ID LPAREN LCURLY_BRACKET typesVarProduction RCURLY_BRACKET RPAREN LCURLY_BRACKET RCURLY_BRACKET\n    | types ID LPAREN LCURLY_BRACKET typesVarProduction RCURLY_BRACKET RPAREN LCURLY_BRACKET\n    condition : ID comparator IDconditionProduction : condition\n    | condition logicalOperator conditionProduction\n    values : value\n    | value COMA values\n    value : numericValue\n    | STR\n    | TRUE\n    | FALSE\n    numericValue : INT\n    | DOUBLE\n    types : VAR\n    | CONST\n    | FINAL\n    | VOID\n    | STATIC\n    | BOOL\n    explicit_types : INTTYPE\n    | DOUBLETYPE\n    | STRINGTYPE\n    | HASHSETTYPE\n    | SETTYPE\n    | LINKEDHASHSETTYPE\n    | SPLAYTREESETTYPE\n    | BOOL\n    | record_shape\n    typesVarProduction : requiredTypes\n    | requiredTypes COMA typesVarProduction\n    requiredTypes : REQUIRED types ID\n    | types ID\n    | types CLOSEQUESTIONMARK ID\n    | types LSBRACKET CLOSEQUESTIONMARK ID RSBRACKET\n    typesVarAsignation : types ID EQUALS value DOTCOMAlogicalOperator : AND\n    | OR\n    comparator : GREATER_THAN\n    | GREATER_THAN_EQUAL\n    | LESS_THAN\n    | LESS_THAN_EQUAL\n    | EQUAL\n    codeLine : types ID EQUALS value DOTCOMA\n    | var_mods explicit_types ID DOTCOMA\n    | var_mods explicit_types CLOSEQUESTIONMARK ID DOTCOMA\n    | LATE explicit_types nullsafe_mod ID DOTCOMA\n    nullsafe_mod : empty\n    | CLOSEQUESTIONMARK\n    var_mods : empty\n    | FINAL\n    | CONST\n    record_shape : LPAREN record_shape_def RPAREN\n    | LPAREN LCURLY_BRACKET record_shape_named_def RCURLY_BRACKET RPAREN\n    record_shape_def : explicit_types\n    | explicit_types COMA record_shape_def\n    record_shape_named_def : explicit_types ID\n    | explicit_types ID COMA record_shape_named_def\n    empty :codeLine : VAR ID EQUALS record DOTCOMA\n    | CONST ID EQUALS LPAREN record_content RPAREN DOTCOMA\n    | FINAL ID EQUALS LPAREN record_content RPAREN DOTCOMA\n    | record_shape ID EQUALS record DOTCOMA\n    record : LPAREN record_content RPARENrecord_content : empty\n    | value\n    | value COMA record_content\n    | types COLON value\n    | types COLON value COMA record_content\n    codeLine : WHILE LPAREN evaluable_condition RPAREN LCURLY_BRACKET RCURLY_BRACKETcodeLine : DO LCURLY_BRACKET RCURLY_BRACKET WHILE LPAREN evaluable_condition RPAREN DOTCOMA\n    | DO LCURLY_BRACKET codeLine RCURLY_BRACKET WHILE LPAREN evaluable_condition RPAREN DOTCOMA\n    evaluable_condition : TRUE\n    | FALSE\n    | conditionProduction\n    | invoke\n    | NEG evaluable_condition\n    | NEG LPAREN evaluable_condition RPAREN\n    invoke : ID LPAREN values RPAREN\n    | ID LPAREN RPAREN\n    | ID METHOD LPAREN values RPAREN\n    '
    
_lr_action_items = {'FOR':([0,53,232,],[2,2,2,]),'VAR':([0,26,53,97,111,122,123,152,176,189,232,238,],[5,56,5,56,56,56,56,56,56,56,5,56,]),'LIST':([0,53,99,232,],[7,7,143,7,]),'IF':([0,9,53,232,],[8,45,8,8,]),'RCURLY_BRACKET':([0,4,43,44,53,60,69,88,89,93,113,114,115,116,117,118,119,137,145,150,151,153,154,155,158,159,163,173,183,184,185,193,212,215,218,220,221,224,225,226,227,228,232,237,240,242,243,245,246,248,249,252,254,255,256,257,258,259,260,],[4,-27,-29,69,88,92,-28,-27,131,-87,-39,-40,-41,-42,-43,-44,-75,-90,183,188,-60,-74,-76,-77,-93,193,-37,-88,-25,220,-63,-100,236,239,-21,-30,-64,-61,-62,-91,-92,-38,4,250,253,-23,-24,256,-101,258,-13,-14,-22,-65,-32,-102,-1,-15,-16,]),'ELSE':([0,53,232,],[9,9,9,]),'LATE':([0,53,232,],[12,12,12,]),'CONST':([0,26,53,97,111,122,123,152,176,189,232,238,],[13,57,13,57,57,57,57,57,57,57,13,57,]),'FINAL':([0,26,53,97,111,122,123,152,176,189,232,238,],[14,58,14,58,58,58,58,58,58,58,14,58,]),'WHILE':([0,53,88,131,232,],[16,16,130,166,16,]),'DO':([0,53,232,],[17,17,17,]),'SETTYPE':([0,3,11,12,13,14,25,28,53,62,135,232,],[18,34,34,34,-82,-81,-80,34,18,34,34,18,]),'HASHSETTYPE':([0,3,11,12,13,14,25,28,53,62,135,232,],[19,33,33,33,-82,-81,-80,33,19,33,33,19,]),'LINKEDHASHSETTYPE':([0,3,11,12,13,14,25,28,53,62,135,232,],[20,35,35,35,-82,-81,-80,35,20,35,35,20,]),'SPLAYTREESETTYPE':([0,3,11,12,13,14,25,28,53,62,135,232,],[21,36,36,36,-82,-81,-80,36,21,36,36,21,]),'VOID':([0,26,53,97,111,122,123,152,176,189,232,238,],[22,22,22,22,22,22,22,22,22,22,22,22,]),'STATIC':([0,26,53,97,111,122,123,152,176,189,232,238,],[23,23,23,23,23,23,23,23,23,23,23,23,]),'BOOL':([0,3,11,12,13,14,25,26,28,53,62,97,111,122,123,135,152,176,189,232,238,],[24,37,37,37,-82,-81,-80,24,37,24,37,24,24,24,24,37,24,24,24,24,24,]),'LPAREN':([0,2,3,8,11,12,13,14,16,25,28,45,46,53,62,63,78,79,80,86,87,129,130,135,143,166,179,232,],[3,26,3,42,3,3,-82,-81,52,-80,3,70,71,3,3,97,122,123,97,127,128,164,165,3,180,199,216,3,]),'INTTYPE':([0,3,11,12,13,14,25,28,53,62,135,232,],[-89,30,30,30,-82,-81,-80,30,-89,30,30,-89,]),'DOUBLETYPE':([0,3,11,12,13,14,25,28,53,62,135,232,],[-89,31,31,31,-82,-81,-80,31,-89,31,31,-89,]),'STRINGTYPE':([0,3,11,12,13,14,25,28,53,62,135,232,],[-89,32,32,32,-82,-81,-80,32,-89,32,32,-89,]),'$end':([1,4,43,69,119,137,145,153,154,155,158,183,184,193,218,220,226,227,242,243,245,246,249,252,254,256,257,258,259,260,],[0,-27,-29,-28,-75,-90,-26,-74,-76,-77,-93,-25,-31,-100,-21,-30,-91,-92,-23,-24,-33,-101,-13,-14,-22,-32,-102,-1,-15,-16,]),'LCURLY_BRACKET':([3,8,9,17,71,100,125,148,174,178,200,223,],[28,43,44,53,111,145,159,184,212,215,232,245,]),'ID':([5,10,13,14,15,22,23,24,30,31,32,33,34,35,36,37,38,41,42,47,48,52,54,55,56,57,58,59,61,70,74,75,76,77,86,98,101,102,103,104,105,106,107,108,109,127,132,134,149,165,169,170,186,190,199,203,204,205,206,207,210,211,222,],[39,46,49,50,51,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,65,68,73,-89,87,68,91,-45,-46,-47,-83,93,68,120,121,-78,-79,87,142,68,-67,-68,147,-69,-70,-71,-72,-73,87,168,-84,185,87,208,209,221,225,87,233,-9,-10,-11,-12,235,-66,244,]),'LESS_THAN':([6,18,19,20,21,63,68,87,],[40,-17,-18,-19,-20,95,107,107,]),'OBJTYPE':([7,40,95,143,],[41,64,136,179,]),'COLON':([22,23,24,56,57,58,141,],[-48,-49,-50,-45,-46,-47,177,]),'CLOSEQUESTIONMARK':([22,23,24,30,31,32,33,34,35,36,37,38,47,48,56,57,58,59,134,149,187,],[-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,74,77,-45,-46,-47,-83,-84,186,222,]),'LSBRACKET':([22,23,24,56,57,58,99,149,],[-48,-49,-50,-45,-46,-47,144,187,]),'RPAREN':([27,29,30,31,32,33,34,35,36,37,38,59,66,67,81,82,83,84,85,92,94,97,110,113,114,115,116,117,118,122,123,126,128,134,138,139,140,146,147,156,157,160,161,162,163,167,176,180,188,194,195,197,198,201,202,208,209,213,214,216,228,229,231,233,234,235,238,251,],[59,-85,-51,-52,-53,-54,-55,-56,-57,-58,-59,-83,100,-35,125,-103,-104,-105,-106,134,-86,-89,148,-39,-40,-41,-42,-43,-44,-89,-89,-107,162,-84,175,-95,-96,-36,-34,191,192,194,195,-110,-37,200,-89,217,223,-108,-109,229,230,-2,-5,-3,-4,-97,-98,241,-38,-111,247,-6,-7,-8,-89,-99,]),'COMA':([29,30,31,32,33,34,35,36,37,38,59,93,113,114,115,116,117,118,134,140,151,163,185,214,221,225,255,],[62,-51,-52,-53,-54,-55,-56,-57,-58,-59,-83,135,-39,-40,-41,-42,-43,-44,-84,176,189,196,-63,238,-64,-62,-65,]),'EQUALS':([39,46,49,50,51,65,91,142,],[63,72,78,79,80,99,133,178,]),'TRUE':([52,72,86,97,122,123,127,128,133,144,164,165,176,177,196,199,212,215,238,],[82,115,82,115,115,115,82,115,115,115,115,82,115,115,115,82,115,115,115,]),'FALSE':([52,72,86,97,122,123,127,128,133,144,164,165,176,177,196,199,212,215,238,],[83,116,83,116,116,116,83,116,116,116,116,83,116,116,116,83,116,116,116,]),'NEG':([52,86,127,165,199,],[86,86,86,86,86,]),'GREATER_THAN':([64,68,87,136,],[98,105,105,174,]),'DOTCOMA':([67,73,90,96,112,113,114,115,116,117,118,120,121,124,146,147,172,175,181,191,192,217,219,230,236,239,241,247,250,253,],[-35,119,132,137,153,-39,-40,-41,-42,-43,-44,154,155,158,-36,-34,211,-94,218,226,227,242,243,246,249,252,254,257,259,260,]),'AND':([67,147,],[102,-34,]),'OR':([67,147,],[103,-34,]),'GREATER_THAN_EQUAL':([68,87,],[106,106,]),'LESS_THAN_EQUAL':([68,87,],[108,108,]),'EQUAL':([68,87,],[109,109,]),'STR':([72,97,122,123,128,133,144,164,176,177,196,212,215,238,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'INT':([72,97,122,123,128,132,133,144,164,176,177,196,203,204,205,206,207,212,215,238,],[117,117,117,117,117,117,117,117,117,117,117,117,117,-9,-10,-11,-12,117,117,117,]),'DOUBLE':([72,97,122,123,128,132,133,144,164,176,177,196,203,204,205,206,207,212,215,238,],[118,118,118,118,118,118,118,118,118,118,118,118,118,-9,-10,-11,-12,118,118,118,]),'METHOD':([87,],[129,]),'REQUIRED':([111,189,],[152,152,]),'RSBRACKET':([113,114,115,116,117,118,144,163,182,228,244,],[-39,-40,-41,-42,-43,-44,181,-37,219,-38,255,]),'PLUS':([117,118,168,171,],[-43,-44,204,204,]),'MINUS':([117,118,168,171,],[-43,-44,205,205,]),'TIMES':([117,118,168,171,],[-43,-44,206,206,]),'DIVIDE':([117,118,168,171,],[-43,-44,207,207,]),'DECREMENT_OPERATOR':([132,168,],[169,201,]),'INCREMENT_OPERATOR':([132,168,],[170,202,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'codeLine':([0,53,232,],[1,89,248,]),'setTypes':([0,53,232,],[6,6,6,]),'types':([0,26,53,97,111,122,123,152,176,189,232,238,],[10,55,10,141,149,141,141,190,141,149,10,141,]),'var_mods':([0,53,232,],[11,11,11,]),'record_shape':([0,3,11,12,28,53,62,135,232,],[15,38,38,38,38,15,38,38,15,]),'empty':([0,48,53,97,122,123,176,232,238,],[25,76,25,139,139,139,139,25,139,]),'record_shape_def':([3,62,],[27,94,]),'explicit_types':([3,11,12,28,62,135,],[29,47,48,61,29,61,]),'typesVarAsignation':([26,],[54,]),'record_shape_named_def':([28,135,],[60,173,]),'conditionProduction':([42,52,54,70,86,101,127,165,199,],[66,84,90,110,84,146,84,84,84,]),'condition':([42,52,54,70,86,101,127,165,199,],[67,67,67,67,67,67,67,67,67,]),'nullsafe_mod':([48,],[75,]),'evaluable_condition':([52,86,127,165,199,],[81,126,160,198,231,]),'invoke':([52,86,127,165,199,],[85,85,85,85,85,]),'record':([63,80,],[96,124,]),'logicalOperator':([67,],[101,]),'comparator':([68,87,],[104,104,]),'value':([72,97,122,123,128,133,144,164,176,177,196,212,215,238,],[112,140,140,140,163,172,163,163,140,214,163,163,163,140,]),'numericValue':([72,97,122,123,128,132,133,144,164,176,177,196,203,212,215,238,],[113,113,113,113,113,171,113,113,113,113,113,113,234,113,113,113,]),'record_content':([97,122,123,176,238,],[138,156,157,213,251,]),'typesVarProduction':([111,189,],[150,224,]),'requiredTypes':([111,189,],[151,151,]),'values':([128,144,164,196,212,215,],[161,182,197,228,237,240,]),'operation':([132,],[167,]),'operator':([168,171,],[203,210,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> codeLine","S'",1,None,None,None),
  ('codeLine -> FOR LPAREN typesVarAsignation conditionProduction DOTCOMA operation RPAREN LCURLY_BRACKET codeLine RCURLY_BRACKET','codeLine',10,'p_forBucle','main.py',6),
  ('operation -> ID DECREMENT_OPERATOR','operation',2,'p_operation','main.py',10),
  ('operation -> DECREMENT_OPERATOR ID','operation',2,'p_operation','main.py',11),
  ('operation -> INCREMENT_OPERATOR ID','operation',2,'p_operation','main.py',12),
  ('operation -> ID INCREMENT_OPERATOR','operation',2,'p_operation','main.py',13),
  ('operation -> ID operator ID','operation',3,'p_operation','main.py',14),
  ('operation -> ID operator numericValue','operation',3,'p_operation','main.py',15),
  ('operation -> numericValue operator ID','operation',3,'p_operation','main.py',16),
  ('operator -> PLUS','operator',1,'p_operator','main.py',21),
  ('operator -> MINUS','operator',1,'p_operator','main.py',22),
  ('operator -> TIMES','operator',1,'p_operator','main.py',23),
  ('operator -> DIVIDE','operator',1,'p_operator','main.py',24),
  ('codeLine -> VAR ID EQUALS LESS_THAN OBJTYPE GREATER_THAN LCURLY_BRACKET RCURLY_BRACKET DOTCOMA','codeLine',9,'p_emptySet','main.py',29),
  ('codeLine -> setTypes LESS_THAN OBJTYPE GREATER_THAN ID EQUALS LCURLY_BRACKET RCURLY_BRACKET DOTCOMA','codeLine',9,'p_emptySet','main.py',30),
  ('codeLine -> VAR ID EQUALS LESS_THAN OBJTYPE GREATER_THAN LCURLY_BRACKET values RCURLY_BRACKET DOTCOMA','codeLine',10,'p_set','main.py',35),
  ('codeLine -> setTypes LESS_THAN OBJTYPE GREATER_THAN ID EQUALS LCURLY_BRACKET values RCURLY_BRACKET DOTCOMA','codeLine',10,'p_set','main.py',36),
  ('setTypes -> SETTYPE','setTypes',1,'p_setTypes','main.py',41),
  ('setTypes -> HASHSETTYPE','setTypes',1,'p_setTypes','main.py',42),
  ('setTypes -> LINKEDHASHSETTYPE','setTypes',1,'p_setTypes','main.py',43),
  ('setTypes -> SPLAYTREESETTYPE','setTypes',1,'p_setTypes','main.py',44),
  ('codeLine -> LIST OBJTYPE ID EQUALS LSBRACKET RSBRACKET DOTCOMA','codeLine',7,'p_emptyList','main.py',49),
  ('codeLine -> LIST OBJTYPE ID EQUALS LIST OBJTYPE LPAREN RPAREN DOTCOMA','codeLine',9,'p_emptyList','main.py',50),
  ('codeLine -> LIST OBJTYPE ID EQUALS LIST LPAREN RPAREN DOTCOMA','codeLine',8,'p_emptyList','main.py',51),
  ('codeLine -> LIST OBJTYPE ID EQUALS LSBRACKET values RSBRACKET DOTCOMA','codeLine',8,'p_list','main.py',56),
  ('codeLine -> IF LPAREN conditionProduction RPAREN LCURLY_BRACKET RCURLY_BRACKET','codeLine',6,'p_ifStatement','main.py',60),
  ('codeLine -> IF LPAREN conditionProduction RPAREN LCURLY_BRACKET','codeLine',5,'p_ifStatement','main.py',61),
  ('codeLine -> RCURLY_BRACKET','codeLine',1,'p_ifStatement','main.py',62),
  ('codeLine -> ELSE LCURLY_BRACKET RCURLY_BRACKET','codeLine',3,'p_elseStatement','main.py',67),
  ('codeLine -> IF LCURLY_BRACKET','codeLine',2,'p_elseStatement','main.py',68),
  ('codeLine -> ELSE IF LPAREN conditionProduction RPAREN LCURLY_BRACKET RCURLY_BRACKET','codeLine',7,'p_ifElseStatement','main.py',73),
  ('codeLine -> ELSE IF LPAREN conditionProduction RPAREN LCURLY_BRACKET','codeLine',6,'p_ifElseStatement','main.py',74),
  ('codeLine -> types ID LPAREN LCURLY_BRACKET typesVarProduction RCURLY_BRACKET RPAREN LCURLY_BRACKET RCURLY_BRACKET','codeLine',9,'p_NamedParametersfunction','main.py',79),
  ('codeLine -> types ID LPAREN LCURLY_BRACKET typesVarProduction RCURLY_BRACKET RPAREN LCURLY_BRACKET','codeLine',8,'p_NamedParametersfunction','main.py',80),
  ('condition -> ID comparator ID','condition',3,'p_condition','main.py',85),
  ('conditionProduction -> condition','conditionProduction',1,'p_conditionProduction','main.py',89),
  ('conditionProduction -> condition logicalOperator conditionProduction','conditionProduction',3,'p_conditionProduction','main.py',90),
  ('values -> value','values',1,'p_values','main.py',95),
  ('values -> value COMA values','values',3,'p_values','main.py',96),
  ('value -> numericValue','value',1,'p_value','main.py',101),
  ('value -> STR','value',1,'p_value','main.py',102),
  ('value -> TRUE','value',1,'p_value','main.py',103),
  ('value -> FALSE','value',1,'p_value','main.py',104),
  ('numericValue -> INT','numericValue',1,'p_numericValue','main.py',109),
  ('numericValue -> DOUBLE','numericValue',1,'p_numericValue','main.py',110),
  ('types -> VAR','types',1,'p_types','main.py',115),
  ('types -> CONST','types',1,'p_types','main.py',116),
  ('types -> FINAL','types',1,'p_types','main.py',117),
  ('types -> VOID','types',1,'p_types','main.py',118),
  ('types -> STATIC','types',1,'p_types','main.py',119),
  ('types -> BOOL','types',1,'p_types','main.py',120),
  ('explicit_types -> INTTYPE','explicit_types',1,'p_explicit_types','main.py',125),
  ('explicit_types -> DOUBLETYPE','explicit_types',1,'p_explicit_types','main.py',126),
  ('explicit_types -> STRINGTYPE','explicit_types',1,'p_explicit_types','main.py',127),
  ('explicit_types -> HASHSETTYPE','explicit_types',1,'p_explicit_types','main.py',128),
  ('explicit_types -> SETTYPE','explicit_types',1,'p_explicit_types','main.py',129),
  ('explicit_types -> LINKEDHASHSETTYPE','explicit_types',1,'p_explicit_types','main.py',130),
  ('explicit_types -> SPLAYTREESETTYPE','explicit_types',1,'p_explicit_types','main.py',131),
  ('explicit_types -> BOOL','explicit_types',1,'p_explicit_types','main.py',132),
  ('explicit_types -> record_shape','explicit_types',1,'p_explicit_types','main.py',133),
  ('typesVarProduction -> requiredTypes','typesVarProduction',1,'p_typesVarProduction','main.py',138),
  ('typesVarProduction -> requiredTypes COMA typesVarProduction','typesVarProduction',3,'p_typesVarProduction','main.py',139),
  ('requiredTypes -> REQUIRED types ID','requiredTypes',3,'p_requiredTypes','main.py',144),
  ('requiredTypes -> types ID','requiredTypes',2,'p_requiredTypes','main.py',145),
  ('requiredTypes -> types CLOSEQUESTIONMARK ID','requiredTypes',3,'p_requiredTypes','main.py',146),
  ('requiredTypes -> types LSBRACKET CLOSEQUESTIONMARK ID RSBRACKET','requiredTypes',5,'p_requiredTypes','main.py',147),
  ('typesVarAsignation -> types ID EQUALS value DOTCOMA','typesVarAsignation',5,'p_typesVarAsignation','main.py',154),
  ('logicalOperator -> AND','logicalOperator',1,'p_logicalOperator','main.py',158),
  ('logicalOperator -> OR','logicalOperator',1,'p_logicalOperator','main.py',159),
  ('comparator -> GREATER_THAN','comparator',1,'p_comparator','main.py',164),
  ('comparator -> GREATER_THAN_EQUAL','comparator',1,'p_comparator','main.py',165),
  ('comparator -> LESS_THAN','comparator',1,'p_comparator','main.py',166),
  ('comparator -> LESS_THAN_EQUAL','comparator',1,'p_comparator','main.py',167),
  ('comparator -> EQUAL','comparator',1,'p_comparator','main.py',168),
  ('codeLine -> types ID EQUALS value DOTCOMA','codeLine',5,'p_declaration','main.py',176),
  ('codeLine -> var_mods explicit_types ID DOTCOMA','codeLine',4,'p_declaration','main.py',177),
  ('codeLine -> var_mods explicit_types CLOSEQUESTIONMARK ID DOTCOMA','codeLine',5,'p_declaration','main.py',178),
  ('codeLine -> LATE explicit_types nullsafe_mod ID DOTCOMA','codeLine',5,'p_declaration','main.py',179),
  ('nullsafe_mod -> empty','nullsafe_mod',1,'p_nullsafe_mod','main.py',184),
  ('nullsafe_mod -> CLOSEQUESTIONMARK','nullsafe_mod',1,'p_nullsafe_mod','main.py',185),
  ('var_mods -> empty','var_mods',1,'p_var_mods','main.py',190),
  ('var_mods -> FINAL','var_mods',1,'p_var_mods','main.py',191),
  ('var_mods -> CONST','var_mods',1,'p_var_mods','main.py',192),
  ('record_shape -> LPAREN record_shape_def RPAREN','record_shape',3,'p_record_shape','main.py',198),
  ('record_shape -> LPAREN LCURLY_BRACKET record_shape_named_def RCURLY_BRACKET RPAREN','record_shape',5,'p_record_shape','main.py',199),
  ('record_shape_def -> explicit_types','record_shape_def',1,'p_record_shape_def','main.py',204),
  ('record_shape_def -> explicit_types COMA record_shape_def','record_shape_def',3,'p_record_shape_def','main.py',205),
  ('record_shape_named_def -> explicit_types ID','record_shape_named_def',2,'p_record_shape_named_def','main.py',210),
  ('record_shape_named_def -> explicit_types ID COMA record_shape_named_def','record_shape_named_def',4,'p_record_shape_named_def','main.py',211),
  ('empty -> <empty>','empty',0,'p_empty','main.py',216),
  ('codeLine -> VAR ID EQUALS record DOTCOMA','codeLine',5,'p_record_variable','main.py',221),
  ('codeLine -> CONST ID EQUALS LPAREN record_content RPAREN DOTCOMA','codeLine',7,'p_record_variable','main.py',222),
  ('codeLine -> FINAL ID EQUALS LPAREN record_content RPAREN DOTCOMA','codeLine',7,'p_record_variable','main.py',223),
  ('codeLine -> record_shape ID EQUALS record DOTCOMA','codeLine',5,'p_record_variable','main.py',224),
  ('record -> LPAREN record_content RPAREN','record',3,'p_record','main.py',229),
  ('record_content -> empty','record_content',1,'p_record_content','main.py',233),
  ('record_content -> value','record_content',1,'p_record_content','main.py',234),
  ('record_content -> value COMA record_content','record_content',3,'p_record_content','main.py',235),
  ('record_content -> types COLON value','record_content',3,'p_record_content','main.py',236),
  ('record_content -> types COLON value COMA record_content','record_content',5,'p_record_content','main.py',237),
  ('codeLine -> WHILE LPAREN evaluable_condition RPAREN LCURLY_BRACKET RCURLY_BRACKET','codeLine',6,'p_while','main.py',245),
  ('codeLine -> DO LCURLY_BRACKET RCURLY_BRACKET WHILE LPAREN evaluable_condition RPAREN DOTCOMA','codeLine',8,'p_do_while','main.py',249),
  ('codeLine -> DO LCURLY_BRACKET codeLine RCURLY_BRACKET WHILE LPAREN evaluable_condition RPAREN DOTCOMA','codeLine',9,'p_do_while','main.py',250),
  ('evaluable_condition -> TRUE','evaluable_condition',1,'p_evaluable_condition','main.py',255),
  ('evaluable_condition -> FALSE','evaluable_condition',1,'p_evaluable_condition','main.py',256),
  ('evaluable_condition -> conditionProduction','evaluable_condition',1,'p_evaluable_condition','main.py',257),
  ('evaluable_condition -> invoke','evaluable_condition',1,'p_evaluable_condition','main.py',258),
  ('evaluable_condition -> NEG evaluable_condition','evaluable_condition',2,'p_evaluable_condition','main.py',259),
  ('evaluable_condition -> NEG LPAREN evaluable_condition RPAREN','evaluable_condition',4,'p_evaluable_condition','main.py',260),
  ('invoke -> ID LPAREN values RPAREN','invoke',4,'p_invoke','main.py',268),
  ('invoke -> ID LPAREN RPAREN','invoke',3,'p_invoke','main.py',269),
  ('invoke -> ID METHOD LPAREN values RPAREN','invoke',5,'p_invoke','main.py',270),
]
